* {
  margin: 0;
  padding: 0;
}

:root {
  --diameter: 400px;
  --number-of-slices: 6;
  --radius: calc(var(--diameter) / 2);
  --circumference: 6.283185307 * var(--radius);
  --slice-height: calc(var(--circumference) / var(--number-of-slices));
  --slice-offset: calc(var(--slice-height) / 2);
  --slice-color: #095b8d;
  --slice-color-even: #063c5d;
  --rotation: 360deg / var(--number-of-slices);
}
body {
  font-family: sans-serif;
  background: #f6f7f9;
}
.container {
  position: relative;
  max-width: 800px;
  margin: 2rem auto;
}
.spinner-table {
  height: calc(var(--diameter) - 2px);
  width: calc(var(--diameter) - 2px);
  position: relative;
  border-radius: 100%;
  overflow: hidden;
}
.dial {
  height: 100%;
  transition: all 5s ease-out;
  animation-fill-mode: forwards;
  animation-timing-function: linear;
}
.dial.spinning {
  animation-duration: 5s;
  animation-timing-function: cubic-bezier(0.44, -0.205, 0, 1.13);
  animation-name: spinning;
}
.dial:before {
  content: "";
  text-align: center;
  display: block;
  line-height: 60px;
  position: absolute;
  height: 40px;
  width: 40px;
  background: white;
  box-shadow: 0 0 5px 5px rgba(0, 0, 0, 0.1);
  top: 50%;
  left: 50%;
  margin-top: -20px;
  margin-left: -20px;
  border-radius: 100%;
  z-index: 200;
}
.dial .slice {
  z-index: 150;
  position: absolute;
  top: calc(50% - var(--slice-offset));
  height: var(--slice-height);
  left: 50%;
  width: 50%;
  color: white;
  text-align: right;
  padding-right: 10px;
  display: block;
  transform-origin: left center;
  /*&:nth-child(7) {
              transform: rotate(180deg);
          }
          &:nth-child(8) {
              transform: rotate(210deg);
          }
          &:nth-child(9) {
              transform: rotate(240deg);
          }
          &:nth-child(10) {
              transform: rotate(270deg);
          }
          &:nth-child(11) {
              transform: rotate(300deg);
          }
          &:nth-child(12) {
              transform: rotate(330deg);
          } */
}
.dial .slice:before,
.dial .slice:after {
  content: "";
  display: block;
  width: 0;
  height: 0;
  border-style: solid;
}
.dial .slice:before {
  margin-bottom: -1px;
  margin-top: -2px;
  border-width: 0 0 calc(var(--slice-height) / 2 + 4px) var(--radius);
  border-color: transparent transparent var(--slice-color) transparent;
}
.dial .slice:after {
  margin-top: -1px;
  margin-bottom: -2px;
  border-width: 0 var(--radius) calc(var(--slice-height) / 2 + 18px) 0;
  border-color: transparent var(--slice-color) transparent transparent;
}
.dial .slice:nth-child(even):after {
  border-color: transparent var(--slice-color-even) transparent transparent;
}
.dial .slice:nth-child(even):before {
  border-color: transparent transparent var(--slice-color-even) transparent;
}
.dial .slice .label {
  position: absolute;
  top: 0;
  bottom: 0;
  width: 70%;
  line-height: var(--slice-height);
  padding-top: 1px;
  padding-bottom: 1px;
  font-size: 16px;
  text-align: right;
  padding-left: 20px;
}
.dial .slice:nth-child(1) {
  transform: rotate(0deg);
}
.dial .slice:nth-child(2) {
  transform: rotate(60deg);
}
.dial .slice:nth-child(3) {
  transform: rotate(120deg);
}
.dial .slice:nth-child(4) {
  transform: rotate(180deg);
}
.dial .slice:nth-child(5) {
  transform: rotate(240deg);
}
.dial .slice:nth-child(6) {
  transform: rotate(300deg);
}
@keyframes rotating {
  from {
    transform: rotate(0);
  }
  to {
    transform: rotate(360deg);
  }
}
.arrow {
  position: absolute;
  height: 30px;
  width: 50px;
  left: calc(var(--diameter) + 30px);
  z-index: 500;
  display: block;
  top: 50%;
  margin-top: -15px;
  transform-origin: center right;
}
.pointer {
  z-index: 500;
  display: block;
  height: 30px;
  width: 50px;
}
.pointer:before {
  content: "";
  display: block;
  position: absolute;
  right: 0;
  top: 0;
  width: 0;
  height: 0;
  border-style: solid;
  border-width: 0 0 15px 50px;
  border-color: transparent transparent #c27028 transparent;
}
.pointer:after {
  content: "";
  display: block;
  position: absolute;
  right: 0;
  bottom: 0;
  width: 0;
  height: 0;
  border-style: solid;
  border-width: 0 50px 15px 0;
  border-color: transparent #c27028 transparent transparent;
}
.board {
  position: relative;
  background: white;
  padding: 50px;
}
button#spin {
  background: #c27028;
  border: 0;
  padding: 15px 50px;
  color: white;
  position: absolute;
  top: 50%;
  margin-top: -20px;
  right: 20%;
  cursor: pointer;
}

/* Form rules */
.form-wrapper {
  width: 350px;
  margin: auto;
}

form {
  display: flex;
  flex-direction: column;
  gap: 10px;
  padding: 25px;
  border: solid rgb(153, 153, 153);
  border-radius: 8px;
  width: 330px;
  box-sizing: border-box;
}

input {
  font-size: 1.3rem;
  width: 250px;
  height: 25px;
  box-sizing: border-box;
}
span {
  display: flex;
}
span.input {
  display: grid;
  grid-auto-flow: column;
  grid-template-columns: 255px auto;
}
.condition {
  color: red;
  font-size: 21px;
}

input:invalid {
  background-color: rgb(255, 202, 202);
  border-color: red;
}

input:valid {
  background-color: rgb(202, 255, 206);
  border-color: green;
}

.error {
  width: 250px;
  font-weight: 600;
  font-size: 90%;
  color: white;
  background-color: #900;
  border-radius: 0 0 5px 5px;
  box-sizing: border-box;
}

form > div > button {
  width: 140px;
  position: relative;
  background: #c27028;
  border: 0;
  padding: 15px 50px;
  color: white;
  left: 67px;
}

dialog[open] {
  opacity: 1;
  transform: scaleY(1);
}

dialog {
  animation: fadeIn 1s;
  font-size: 1.5rem;
  background-color: #323443;
  color: SteelBlue;
  padding: 30px;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  margin: auto;
  position: absolute;
  opacity: 0;
  transform: scaleY(0);
  transition: opacity 0.7s ease-out, transform 0.7s ease-out,
    overlay 0.7s ease-out allow-discrete, display 0.7s ease-out allow-discrete;
}

dialog div {
  margin-top: 10px;
  display: flex;
  justify-content: space-between;
}

dialog button {
  border: none;
  background-color: steelblue;
  font-size: 1.3rem;
  color: #cbcaca;
  text-shadow: black 1px 0 10px;
  padding: 10px;
  cursor: pointer;
}

dialog button:hover {
  color: #e1e0e0;
  background-color: rgb(57, 107, 147);
}

dialog::backdrop {
  background-color: rgb(0 0 0 / 0%);
  transition: display 0.7s allow-discrete, overlay 0.7s allow-discrete,
    background-color 0.7s;
}

dialog[open]::backdrop {
  background-color: rgb(0 0 0 / 45%);
  backdrop-filter: blur(4px);
}
